name: together-server CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. GitHub 레포지토리 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v2

      # 2. GitHub Secrets로부터 .env 파일 생성 (backend 디렉토리에 생성)
      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE_CONTENT }}" > backend/.env

      # 3. JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      # 4. .env 파일 존재 여부 및 내용 출력
      - name: Check .env file
        run: |
          echo "[🔍 .env 파일 확인]"
          ls -al backend/.env
          echo ""
          echo "[📄 .env 파일 내용]"
          cat backend/.env

      # 5. Gradle 빌드 실행 (테스트 제외)
      - name: 🛠️ Build Spring Boot App
        run: |
          cd backend
          ./gradlew clean build -x test

      # 6. 빌드된 .jar 파일 목록 출력
      - name: List build artifacts
        run: ls -al backend/build/libs

      # 🔎 빌드 결과 파일 및 .env 파일 존재 여부 확인
      - name: 🔎 Check existence of .env and JAR
        run: |
          echo "[✅ 디버깅] backend/.env 존재 여부:"
          if [ -f backend/.env ]; then
          echo "✅ .env exists"
          else
          echo "❌ .env NOT found!"
          exit 1
          fi
          
          echo ""
          echo "[✅ 디버깅] backend/build/libs/*.jar 존재 여부:"
          ls -al backend/build/libs || echo "❌ 해당 디렉토리 없음"
          if ls backend/build/libs/backend-0.0.1-SNAPSHOT.jar 1> /dev/null 2>&1; then
          echo "✅ JAR exists"
          else
          echo "❌ JAR NOT found!"
          exit 1
          fi
          
      # .env와 .jar를 루트로 복사
      - name: Move files to root before upload
        run: |
          cp backend/.env .
          cp backend/build/libs/backend-0.0.1-SNAPSHOT.jar .

      # 7. EC2로 .jar와 .env 파일 업로드 (디렉토리 제거 후 deploy에 배치)
      - name: Upload Jar and .env to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: |
            backend-0.0.1-SNAPSHOT.jar
            .env
          target: ~/deploy/
          strip_components: 0

      # 8. EC2에서 Spring Boot 실행
      - name: Run Spring Boot App on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "[🔁 MySQL, Redis 재시작]"
            sudo systemctl restart mysql
            sudo systemctl restart redis

            echo "[🛑 기존 Spring Boot 프로세스 종료]"
            pkill -f 'java -jar' || true

            echo "[🚀 Spring Boot 앱 실행]"
            cd ~/deploy
            nohup env $(cat .env | xargs) java -jar backend-0.0.1-SNAPSHOT.jar > app.log 2>&1 &

            echo "[📄 로그 확인: tail -f ~/deploy/app.log]"